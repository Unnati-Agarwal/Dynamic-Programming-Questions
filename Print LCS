class Solution {
public:
    int longestCommonSubsequence(string text1, string text2) 
    {
        int l1=text1.length();
        int l2=text2.length();
        if(l1==0 or l2==0)
            return 0;
        
        //string str="";
        vector<vector<int>>dp(l1+1,vector<int>(l2+1,0));
        for(int i=1;i<l1+1;i++)
        {
            for(int j=1;j<l2+1;j++)
            {
                
                if(text1[i-1]==text2[j-1])
                    dp[i][j]=1+dp[i-1][j-1];
                else
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
            }
        }
        int i=l1,j=l2;
        string str="";
        while(i>0 and j>0)
        {
            if(text1[i-1]==text2[j-1])
            {
                str+=text1[i-1];
                i--;
                j--;
            }
            else
            {
                if(dp[i-1][j]>dp[i][j-1])
                    i--;
                else
                    j--;
            }
        }
        reverse(str.begin(),str.end());
        cout<<str;
        return  dp[l1][l2];
    }
};
