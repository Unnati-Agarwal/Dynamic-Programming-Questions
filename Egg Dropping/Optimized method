class Solution {
public:
    int solve(int k,int n,vector<vector<int>>&dp)
    {
        if(n==0 or n==1)
            return n;
        
        if(k==1)
            return n;
        
        if(dp[k][n]!=-1)
            return dp[k][n];
        
        int mn=INT_MAX,low=1,high=n;
        while(low<=high)
        {
            int mid=(low+high)/2;
            int left=solve(k-1,mid-1,dp);
            int right=solve(k,n-mid,dp);
            int ans=1+max(left,right);
            if(left<right)
                low=mid+1;
            else
                high=mid-1;
            
            mn=min(ans,mn);
        }
        return dp[k][n]=mn;
    }
    int superEggDrop(int k, int n) 
    {
        vector<vector<int>>dp(k+1,vector<int>(n+1,-1));
        return solve(k,n,dp);
    }
};
