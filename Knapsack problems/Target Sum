class Solution {
  public:
    int findTargetSumWays(vector<int>&A ,int target) {
        //Your code here
        int sum=accumulate(A.begin(),A.end(),0);
        if(sum<target or target<-sum)
            return 0;
        
        if((target+sum)%2!=0)
            return 0;
        
        int sum1=((sum+target)/2),n;
        n=A.size();
        int dp[n+1][sum1+1];
        
        dp[0][0]=1;
        // for(int i=0;i<=n;i++)
        //     dp[i][0]=1;
        
        for(int i=1;i<=sum1;i++)
            dp[0][i]=0;
        
        for(int i=1;i<=n;i++)
        {
            for(int j=0;j<=sum1;j++)
            {
                if(A[i-1]<=j)
                    dp[i][j]=dp[i-1][j]+dp[i-1][j-A[i-1]];
                else
                    dp[i][j]=dp[i-1][j];
            }
        }
        return dp[n][sum1];
    }
};
